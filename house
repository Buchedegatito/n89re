/*
TPW HOUSELIGHTS - Ambient house lighting for Arma 3

Author: tpw
Date: 20180325
Version: 1.17
Requires: CBA A3, tpw_core.sqf
Compatibility: SP, MP client

To use: 
1 - Save this script into your mission directory as eg tpw_houselights.sqf
2 - Call it with 0 = [10] execvm "tpw_houselights.sqf"; where 10 = delay until houselighting starts

THIS SCRIPT WON'T RUN ON DEDICATED SERVERS
*/

if (isDedicated) exitWith {};
if (count _this < 2) exitwith {player sidechat "TPW HOUSELIGHTS incorrect/no config, exiting."};
WaitUntil {!isNull FindDisplay 46};
WaitUntil {!isnil "tpw_core_sunangle"};

// VARIABLES
tpw_houselights_version = "1.17"; // Version string
tpw_houselights_sleep = _this select 0; // Delay until houselights functions start
tpw_houselights_radius = _this select 1; // Radius around player to check for houses to spawn lights into
tpw_houselights_housearray = []; // Array of lightable houses near player
tpw_houselights_maxlights = 10; // Maximum number of lit houses.

tpw_houselights_active = true; // Global enable/disable	
	
// SPAWN A LIGHT INTO HOUSE AT CEILING LEVEL	
tpw_houselights_fnc_spawnlight =
	{
	private ["_house","_houselight","_x","_y","_z","_middle","_testpos","_lightpos","_ctr"];
	_house = _this select 0;
	
	// Determine middle of house
	_middle = (getposasl _house) vectoradd (boundingcenter _house) vectoradd [0,0,0.5];
	_testpos = _middle vectoradd [0,0,10];	

	// Find ceiling	
	_ceiling = lineintersectssurfaces [_middle,_testpos];
	
	//Create light object
	if (count _ceiling > 0) then 
		{
		_lightpos = asltoagl ((_ceiling select 0) select 0) vectoradd [0,0,-0.3];
		_houselight = "#lightpoint" createVehiclelocal _lightpos;   
		sleep 0.2;
		_houselight setLightColor [250,200,150]; //slightly yellow
		_houselight setLightAmbient [1,1,0.2]; 
		//_houselight setLightAttenuation [0.3,0,0,500]; 
		_houselight setLightAttenuation [1,4,4,0,1,4]; 
		_houselight setLightIntensity 10;
		_houselight setLightUseFlare true;
		_houselight setLightFlareSize 0.5;
		_houselight setLightFlareMaxDistance tpw_houselights_radius;
		_house setvariable ["tpw_houselights_light",_houselight];
		_house setvariable ["tpw_houselights_lit",1];
		tpw_houselights_housearray pushback _house;
		};
			
	};	
	
// MAIN LOOP - SCAN FOR HOUSES TO LIGHT, REMOVE LIGHTS FROM DISTANT HOUSES
sleep tpw_houselights_sleep;	
private ["_lastpos","_nearhouses","_house","_lithouse","_i"];
_lastpos = [0,0,0];
while {true} do
	{
	if  (tpw_houselights_active && {position player distance _lastpos > tpw_houselights_radius/2}) then
		{
		_lastpos = position player;
		
		// Scan for habitable houses to spawn lights into
		_nearhouses = [tpw_houselights_radius] call tpw_core_fnc_screenhouses;
		_nearhouses = [_nearhouses,[],{player distance _x},"ASCEND"] call BIS_fnc_sortBy; // sorted closest to farthest
		
		// Spawn light where appropriate
		if (count _nearhouses > 0 && {tpw_core_sunangle < 0} && {daytime < tpw_core_night && daytime > tpw_core_morning} && {count tpw_houselights_housearray < tpw_houselights_maxlights}) then
			{
			for "_i" from 0 to (count _nearhouses - 1) do
				{
				_house = _nearhouses select _i;
				// If house has not already been lit then light it
				if (_house getvariable ["tpw_houselights_lit",0] == 0) then 
					{
					[_house] call tpw_houselights_fnc_spawnlight;
					};
				};
			};
		
		// Remove lights from distant houses
		if (count tpw_houselights_housearray > 0) then
			{
			for "_i" from 0 to (count tpw_houselights_housearray - 1) do
				{
				_lithouse = tpw_houselights_housearray select _i;
				if (_lithouse distance player > tpw_houselights_radius || daytime > tpw_core_night || daytime < tpw_core_morning || tpw_core_sunangle > 0) then
					{
					//Remove light from lit house out of range
					deletevehicle (_lithouse getvariable "tpw_houselights_light");
					_lithouse setvariable ["tpw_houselights_lit",0];
					tpw_houselights_housearray set [_i, -1];
					};
				};
			tpw_houselights_housearray = tpw_houselights_housearray - [-1] ;
			};
		};
	sleep 5.13;
	};
